{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Container from \"react-bootstrap/Container\";\nimport fetch from \"isomorphic-fetch\";\nimport Thoughts from \"../components/Thoughts\";\n\nfunction Index(props) {\n  return __jsx(Container, null, __jsx(Thoughts, {\n    thoughts: props.thoughts\n  }));\n}\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var req, baseURL, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref.req;\n            baseURL = req ? \"\".concat(req.protocol, \"://\").concat(req.get(\"Host\")) : \"\";\n            _context.next = 4;\n            return fetch(\"\".concat(baseURL, \"/api/thoughts\"));\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            _context.t0 = _context.sent;\n            return _context.abrupt(\"return\", {\n              thoughts: _context.t0\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}